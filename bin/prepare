#!/usr/bin/env sh

# Usage: bin/prepare [VERSION]
#
# Prepares the current directory according to the given Atlassian Confluence
# VERSION. If no VERSION information is specified the latest version is
# retrieved from the Atlassian Confluence download feed.

if [ "$(git rev-parse --abbrev-ref HEAD)" != "master" ] && [ -z "$1" ]; then
	echo "Not master branch and therefore nothing to prepare"
	exit 0
elif [ -n "${1}" ]; then
	echo "Overriding latest Atlassian Confluence to ${1}"
fi

echo "Obtaining Altassian Confluence version information..."

# Obtain the currently latest version of Atlassian Confluence version defined
# by the Dockerfile in this repository.
CURRENT_VERSION=$(sed -nr 's/ENV CONF_VERSION[[:space:]]*(.+)/\1/p' Dockerfile)

# Obtain the latest Atlassian Confluence version by going to the JSON version
# feed information to get a JSONP formatted response, strip the output to
# retrieve the actual content and then get the version number from the first
# entry.
VERSION=${1:-"$(curl -Ls 'https://my.atlassian.com/download/feeds/current/confluence.json' | sed 's/downloads(\(.*\))/\1/g' | jq -r '.[0].version')"}

# Outputs the version information
echo "Found versions:"
echo "  Current: ${CURRENT_VERSION}"
echo "  Latest:  ${VERSION}"
echo ""

echo "Preparing branch for version new Atlassian Confluence version"

# Edit the Dockerfile by changing the current version to the new obtained
# version from the Atlassian Confluence version feed.
sed --in-place \
    --expression "s/ENV CONF_VERSION  ${CURRENT_VERSION}/ENV CONF_VERSION  ${VERSION}/g" \
    Dockerfile

echo "Ready for acceptance testing"
